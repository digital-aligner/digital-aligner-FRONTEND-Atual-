    final uri = Uri.parse(RotasUrl.rotaUpload);
    var request = http.MultipartRequest('POST', uri);
    request.headers['authorization'] = 'Bearer $_token';
    request.files.add(http.MultipartFile.fromBytes(
      'files',
      _currentmodeloSup.bytes,
      filename: _currentmodeloSup.name,
    ));
    var response = await request.send();
    var res = await response.stream.bytesToString();
    print(res);










import 'dart:convert';
import 'dart:math';
import 'package:digital_aligner_app/providers/pedido_provider.dart';
import 'package:flutter/foundation.dart';
import 'package:http/http.dart' as http;
import 'dart:typed_data';
import 'package:http_parser/http_parser.dart';
import 'package:digital_aligner_app/providers/auth_provider.dart';
import 'package:file_picker/file_picker.dart';
import 'package:flutter/material.dart';
import 'package:provider/provider.dart';
import '../../rotas_url.dart';
import 'package:path/path.dart';
import 'package:async/async.dart';

import 'package:dio/dio.dart';

import 'modelo_superior.dart';
//https://stackoverflow.com/questions/63314063/upload-image-file-to-strapi-flutter-web

class ModeloSuperiorUpload extends StatefulWidget {
  @override
  _ModeloSuperiorUploadState createState() => _ModeloSuperiorUploadState();
}

class _ModeloSuperiorUploadState extends State<ModeloSuperiorUpload> {
  //Clear after sending to server
  List<PlatformFile> _modeloSupsDataList = new List<PlatformFile>();

  //New modeloSup object with id and image url from server
  List<ModeloSuperiorModel> _modeloSupsList = new List<ModeloSuperiorModel>();

  Future<dynamic> _deletemodeloSup(_token, modeloSupId) async {
    var _response = await http.delete(
      RotasUrl.rotaDeleteModeloSup + modeloSupId.toString(),
      headers: {
        'Content-Type': 'application/json',
        'Accept': 'application/json',
        'Authorization': 'Bearer $_token',
      },
    );

    return _response;
  }

  Future<void> _openFileExplorer() async {
    FilePickerResult result = await FilePicker.platform.pickFiles(
      type: FileType.custom,
      allowedExtensions: ['stl'],
      allowMultiple: false,
    );
    if (result != null && result.files.length + _modeloSupsList.length <= 16) {
      _modeloSupsDataList = result.files;
    } else {
      throw ('Excedeu número máximo de modelos');
    }
  }

  List<Widget> _uiManagemodeloSups(_token) {
    List<Widget> _ump = new List<Widget>();
    for (var curmodeloSup in _modeloSupsList) {
      _ump.add(
        Material(
          elevation: 5,
          child: Row(
            children: [
              curmodeloSup.imageUrl == null
                  ? Center(
                      child: CircularProgressIndicator(
                        valueColor:
                            new AlwaysStoppedAnimation<Color>(Colors.blue),
                      ),
                    )
                  : Image(
                      fit: BoxFit.cover,
                      width: 100,
                      image: AssetImage('logos/cubo.jpg'),
                    ),
              SizedBox(width: 10),
              curmodeloSup.fileName == null
                  ? Text(
                      'Carregando...',
                      style: TextStyle(
                        color: Colors.black38,
                      ),
                    )
                  : Text(
                      curmodeloSup.fileName,
                      style: TextStyle(
                        color: Colors.black38,
                      ),
                    ),
              Expanded(
                child: Container(),
              ),
              curmodeloSup.id != null
                  ? IconButton(
                      icon: Icon(Icons.delete),
                      onPressed: () {
                        _deletemodeloSup(_token, curmodeloSup.id).then((res) {
                          var data = json.decode(res.body);
                          if (data['id'] != null) {
                            setState(() {
                              _modeloSupsList.removeWhere(
                                (modeloSup) => modeloSup.id == data['id'],
                              );
                            });
                          }
                        });
                      },
                    )
                  : Container(),
              SizedBox(
                width: 20,
              ),
            ],
          ),
        ),
      );
    }
    //Clear memory of unused byte array
    _modeloSupsDataList = null;
    return _ump;
  }

  Future<void> _sendmodeloSup(_token, _currentmodeloSup) async {
    int min = 100000; //min and max values act as your 6 digit range
    int max = 999999;
    var randomizer = new Random();
    var rNum = min + randomizer.nextInt(max - min);
    ModeloSuperiorModel pm = ModeloSuperiorModel(listId: rNum);
    setState(() {
      _modeloSupsList.add(pm);
    });

    var res = await compute(computeFunc, '');

    if (response.data[0]['id'] != null) {
      for (int i = 0; i < _modeloSupsList.length; i++) {
        if (_modeloSupsList[i].listId == rNum) {
          setState(() {
            _modeloSupsList[i].id = response.data[0]['id'];
            _modeloSupsList[i].fileName = response.data[0]['name'];
            _modeloSupsList[i].imageUrl = 'ok';
          });
        }
      }
    }
  }

  static Future<dynamic> computeFunc(a) async {
    FormData formData = FormData.fromMap({
      "files": MultipartFile.fromBytes(
        _currentmodeloSup.bytes,
        filename: _currentmodeloSup.name,
        //contentType: new MediaType("image", "jpeg"),
      )
    });

    var dio = Dio();
    var response = await dio.post(
      RotasUrl.rotaUpload,
      data: formData,
      options: Options(
        contentType: "multipart/form-data",
        headers: {"Authorization": "Bearer $_token"},
      ),
      onSendProgress: (int sent, int total) {
        double percentSent = ((sent / total) * 100);
        for (int i = 0; i < _modeloSupsList.length; i++) {
          if (_modeloSupsList[i].listId == rNum) {
            setState(() {
              _modeloSupsList[i].fileName = percentSent.toString() + ' %';
            });
          }
        }
        print('sent: ${percentSent.toStringAsFixed(0)}%');
      },
    ).whenComplete(() {
      print("complete:");
    }).catchError((onError) {
      print("error:${onError.toString()}");
    });
    return response;
  }

  @override
  Widget build(BuildContext context) {
    final _authStore = Provider.of<AuthProvider>(context);
    final _novoPedStore = Provider.of<PedidoProvider>(context);
    return Container(
      width: 600,
      child: SingleChildScrollView(
        child: Column(
          children: [
            Container(
              width: 300,
              child: ElevatedButton(
                onPressed: () {
                  Scaffold.of(context).showSnackBar(SnackBar(
                    content: Text('Aguarde...'),
                    duration: const Duration(seconds: 3),
                  ));

                  _openFileExplorer().then((_) {
                    for (var modeloSup in _modeloSupsDataList) {
                      _sendmodeloSup(_authStore.token, modeloSup);
                    }
                  }).catchError((e) {
                    Scaffold.of(context).showSnackBar(SnackBar(
                      content: Text('Selecione no máximo 1 modelo!'),
                      duration: const Duration(seconds: 3),
                    ));
                  });
                },
                style: TextButton.styleFrom(
                  padding: const EdgeInsets.symmetric(
                    horizontal: 10,
                    vertical: 20,
                  ),
                  primary: Theme.of(context).primaryColor,
                ),
                child: const Text(
                  'MODELO SUPERIOR',
                  style: const TextStyle(
                    color: Colors.white,
                    fontSize: 25,
                    fontFamily: 'BigNoodleTitling',
                  ),
                ),
              ),
            ),
            SizedBox(height: 20),
            //Showing loaded images, if any.
            _modeloSupsList != null
                ? Column(
                    children: _uiManagemodeloSups(_authStore.token),
                  )
                : Container(),
          ],
        ),
      ),
    );
  }
}
